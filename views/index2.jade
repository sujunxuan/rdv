extends layout

block content
    script.
        jQuery(document).ready(function($)
        {
            var gaugesPalette = ['#8dc63f', '#40bbea', '#ffba00', '#cc3f44'];
            // Data Sources for all charts
            var reqs_per_second_data = [
                { time: new Date("October 02, 2014 01:00:00"), reqs: 89 },
                { time: new Date("October 02, 2014 02:00:00"), reqs: 79 },
                { time: new Date("October 02, 2014 03:00:00"), reqs: 115 },
                { time: new Date("October 02, 2014 04:00:00"), reqs: 186 },
                { time: new Date("October 02, 2014 05:00:00"), reqs: 110 },
                { time: new Date("October 02, 2014 06:00:00"), reqs: 196 },
                { time: new Date("October 02, 2014 07:00:00"), reqs: 128 },
                { time: new Date("October 02, 2014 08:00:00"), reqs: 51 },
                { time: new Date("October 02, 2014 09:00:00"), reqs: 70 },
                { time: new Date("October 02, 2014 10:00:00"), reqs: 54 },
                { time: new Date("October 02, 2014 11:00:00"), reqs: 2 },
                { time: new Date("October 02, 2014 12:00:00"), reqs: 184 },
                { time: new Date("October 02, 2014 13:00:00"), reqs: 48 },
                { time: new Date("October 02, 2014 14:00:00"), reqs: 75 },
                { time: new Date("October 02, 2014 15:00:00"), reqs: 200 },
                { time: new Date("October 02, 2014 16:00:00"), reqs: 9 },
                { time: new Date("October 02, 2014 17:00:00"), reqs: 37 },
                { time: new Date("October 02, 2014 18:00:00"), reqs: 152 },
                { time: new Date("October 02, 2014 19:00:00"), reqs: 78 },
                { time: new Date("October 02, 2014 20:00:00"), reqs: 154 },
                { time: new Date("October 02, 2014 21:00:00"), reqs: 184 },
                { time: new Date("October 02, 2014 22:00:00"), reqs: 167 },
                { time: new Date("October 02, 2014 23:00:00"), reqs: 12 },
                { time: new Date("October 03, 2014 00:00:00"), reqs: 88 },
            ];
            var cpu_usage_data = [
                { time: new Date("October 02, 2014 01:00:00"), usage: 75 },
                { time: new Date("October 02, 2014 02:00:00"), usage: 55 },
                { time: new Date("October 02, 2014 03:00:00"), usage: 49 },
                { time: new Date("October 02, 2014 04:00:00"), usage: 87 },
                { time: new Date("October 02, 2014 05:00:00"), usage: 8 },
                { time: new Date("October 02, 2014 06:00:00"), usage: 20 },
                { time: new Date("October 02, 2014 07:00:00"), usage: 39 },
                { time: new Date("October 02, 2014 08:00:00"), usage: 26 },
                { time: new Date("October 02, 2014 09:00:00"), usage: 87 },
                { time: new Date("October 02, 2014 10:00:00"), usage: 69 },
                { time: new Date("October 02, 2014 11:00:00"), usage: 40 },
                { time: new Date("October 02, 2014 12:00:00"), usage: 57 },
                { time: new Date("October 02, 2014 13:00:00"), usage: 48 },
                { time: new Date("October 02, 2014 14:00:00"), usage: 73 },
                { time: new Date("October 02, 2014 15:00:00"), usage: 28 },
                { time: new Date("October 02, 2014 16:00:00"), usage: 5 },
                { time: new Date("October 02, 2014 17:00:00"), usage: 73 },
                { time: new Date("October 02, 2014 18:00:00"), usage: 27 },
                { time: new Date("October 02, 2014 19:00:00"), usage: 63 },
                { time: new Date("October 02, 2014 20:00:00"), usage: 5 },
                { time: new Date("October 02, 2014 21:00:00"), usage: 100 },
                { time: new Date("October 02, 2014 22:00:00"), usage: 61 },
                { time: new Date("October 02, 2014 23:00:00"), usage: 39 },
                { time: new Date("October 03, 2014 00:00:00"), usage: 59 },
            ];
            var memory_usage_data = [
                { time: new Date("October 02, 2014 01:00:00"), used: 559 },
                { time: new Date("October 02, 2014 02:00:00"), used: 692 },
                { time: new Date("October 02, 2014 03:00:00"), used: 534 },
                { time: new Date("October 02, 2014 04:00:00"), used: 607 },
                { time: new Date("October 02, 2014 05:00:00"), used: 50 },
                { time: new Date("October 02, 2014 06:00:00"), used: 772 },
                { time: new Date("October 02, 2014 07:00:00"), used: 30 },
                { time: new Date("October 02, 2014 08:00:00"), used: 108 },
                { time: new Date("October 02, 2014 09:00:00"), used: 440 },
                { time: new Date("October 02, 2014 10:00:00"), used: 371 },
                { time: new Date("October 02, 2014 11:00:00"), used: 209 },
                { time: new Date("October 02, 2014 12:00:00"), used: 378 },
                { time: new Date("October 02, 2014 13:00:00"), used: 308 },
                { time: new Date("October 02, 2014 14:00:00"), used: 585 },
                { time: new Date("October 02, 2014 15:00:00"), used: 96 },
                { time: new Date("October 02, 2014 16:00:00"), used: 473 },
                { time: new Date("October 02, 2014 17:00:00"), used: 864 },
                { time: new Date("October 02, 2014 18:00:00"), used: 895 },
                { time: new Date("October 02, 2014 19:00:00"), used: 610 },
                { time: new Date("October 02, 2014 20:00:00"), used: 893 },
                { time: new Date("October 02, 2014 21:00:00"), used: 753 },
                { time: new Date("October 02, 2014 22:00:00"), used: 209 },
                { time: new Date("October 02, 2014 23:00:00"), used: 555 },
                { time: new Date("October 03, 2014 00:00:00"), used: 144 },
            ];
            // Requests per second gauge
            $('#reqs-per-second').dxCircularGauge({
                scale: {
                    startValue: 0,
                    endValue: 200,
                    majorTick: {
                        tickInterval: 50
                    }
                },
                rangeContainer: {
                    palette: 'pastel',
                    width: 3,
                    ranges: [
                        {
                            startValue: 0,
                            endValue: 50,
                            color: gaugesPalette[0]
                        }, {
                            startValue: 50,
                            endValue: 100,
                            color: gaugesPalette[1]
                        }, {
                            startValue: 100,
                            endValue: 150,
                            color: gaugesPalette[2]
                        }, {
                            startValue: 150,
                            endValue: 200,
                            color: gaugesPalette[3]
                        }
                    ],
                },
                value: 44,
                valueIndicator: {
                    offset: 10,
                    color: '#2c2e2f',
                    spindleSize: 12
                }
            });
            // Requests per second chart
            $("#reqs-per-second-chart").dxChart({
                dataSource: reqs_per_second_data,
                commonPaneSettings: {
                    border: {
                        visible: true,
                        color: '#f5f5f5'
                    }
                },
                commonSeriesSettings: {
                    type: "area",
                    argumentField: "time",
                    border: {
                        color: '#68b828',
                        width: 1,
                        visible: true
                    }
                },
                series: [
                    { valueField: "reqs", name: "Reqs per Second", color: '#68b828', opacity: .5 },
                ],
                commonAxisSettings: {
                    label: {
                        visible: true
                    },
                    grid: {
                        visible: true,
                        color: '#f5f5f5'
                    }
                },
                argumentAxis: {
                    valueMarginsEnabled: false,
                    label: {
                        customizeText: function (arg) {
                            return date('h:i A', arg.value);
                        }
                    },
                },
                legend: {
                    visible: false
                }
            });
            // CPU Usage
            $('#cpu-usage').dxCircularGauge({
                scale: {
                    startValue: 0,
                    endValue: 100,
                    majorTick: {
                        tickInterval: 25
                    }
                },
                rangeContainer: {
                    palette: 'pastel',
                    width: 3,
                    ranges: [
                        {
                            startValue: 0,
                            endValue: 25,
                            color: gaugesPalette[0]
                        }, {
                            startValue: 25,
                            endValue: 50,
                            color: gaugesPalette[1]
                        }, {
                            startValue: 50,
                            endValue: 75,
                            color: gaugesPalette[2]
                        }, {
                            startValue: 75,
                            endValue: 100,
                            color: gaugesPalette[3]
                        }
                    ],
                },
                value: 16,
                valueIndicator: {
                    offset: 10,
                    color: '#2c2e2f',
                    spindleSize: 12
                }
            });
            // CPU Usage chart
            $("#cpu-usage-chart").dxChart({
                dataSource: cpu_usage_data,
                commonPaneSettings: {
                    border: {
                        visible: true,
                        color: '#f5f5f5'
                    }
                },
                commonSeriesSettings: {
                    type: "area",
                    argumentField: "time",
                    border: {
                        color: '#7c38bc',
                        width: 1,
                        visible: true
                    }
                },
                series: [
                    { valueField: "usage", name: "Capacity used", color: '#7c38bc', opacity: .5 },
                ],
                commonAxisSettings: {
                    label: {
                        visible: true
                    },
                    grid: {
                        visible: true,
                        color: '#f5f5f5'
                    }
                },
                argumentAxis: {
                    valueMarginsEnabled: false,
                    label: {
                        customizeText: function (arg) {
                            return date('h:i A', arg.value);
                        }
                    },
                },
                legend: {
                    visible: false
                }
            });
            // Memory Usage
            $('#memory-usage').dxCircularGauge({
                scale: {
                    startValue: 0,
                    endValue: 1000,
                    majorTick: {
                        tickInterval: 250
                    }
                },
                rangeContainer: {
                    palette: 'pastel',
                    width: 3,
                    ranges: [
                        {
                            startValue: 0,
                            endValue: 250,
                            color: '#40bbea'
                        }, {
                            startValue: 250,
                            endValue: 500,
                            color: '#40bbea'
                        }, {
                            startValue: 500,
                            endValue: 750,
                            color: '#40bbea'
                        }, {
                            startValue: 750,
                            endValue: 1000,
                            color: '#40bbea'
                        }
                    ],
                },
                value: 315,
                valueIndicator: {
                    offset: 10,
                    color: '#2c2e2f',
                    spindleSize: 12
                }
            });
            // Memory Usage chart
            $("#memory-usage-chart").dxChart({
                dataSource: memory_usage_data,
                commonPaneSettings: {
                    border: {
                        visible: true,
                        color: '#f5f5f5'
                    }
                },
                commonSeriesSettings: {
                    type: "area",
                    argumentField: "time",
                    border: {
                        color: '#40bbea',
                        width: 1,
                        visible: true
                    }
                },
                series: [
                    { valueField: "used", name: "Megabytes occupied", color: '#40bbea', opacity: .5 },
                ],
                commonAxisSettings: {
                    label: {
                        visible: true
                    },
                    grid: {
                        visible: true,
                        color: '#f5f5f5'
                    }
                },
                argumentAxis: {
                    valueMarginsEnabled: false,
                    label: {
                        customizeText: function (arg) {
                            return date('h:i A', arg.value);
                        }
                    },
                },
                legend: {
                    visible: false
                }
            });
            // Combine charts for filtering, grouped by time
            var all_data_sources = [];
            $.map(reqs_per_second_data, function(arg, i)
            {
                all_data_sources.push({
                    time: 					arg.time,
                    requestsPerMinute: 		reqs_per_second_data[i].reqs,
                    cpuUsage: 				cpu_usage_data[i].usage,
                    memoryUsed: 			memory_usage_data[i].used
                });
            });
            // Range Filter
            $("#range-chart").dxRangeSelector({
                dataSource: all_data_sources,
                size: {
                    height: 140
                },
                chart: {
                    series: [
                        { argumentField: "time", valueField: "requestsPerMinute", color: '#68b828', opacity: .65 },
                        { argumentField: "time", valueField: "cpuUsage", color: '#7c38bc', opacity: .65 },
                        { argumentField: "time", valueField: "memoryUsed", color: '#40bbea', opacity: .65 }
                    ]
                },
                selectedRangeChanged: function(e)
                {
                    var filter = {
                        reqsPerMinuteData: [],
                        cpuUsageData: [],
                        memoryUsageData: []
                    };
                    $.map(all_data_sources, function(arg, i)
                    {
                        if(date("U", e.startValue) <= date("U", arg.time) && date("U", e.endValue) >= date("U", arg.time))
                        {
                            filter.reqsPerMinuteData.push({
                                time: arg.time,
                                reqs: arg.requestsPerMinute
                            });
                            filter.cpuUsageData.push({
                                time: arg.time,
                                usage: arg.cpuUsage
                            });
                            filter.memoryUsageData.push({
                                time: arg.time,
                                used: arg.memoryUsed
                            });
                        }
                    });
                    $('#reqs-per-second-chart').dxChart('instance').option('dataSource', filter.reqsPerMinuteData);
                    $('#cpu-usage-chart').dxChart('instance').option('dataSource', filter.cpuUsageData);
                    $('#memory-usage-chart').dxChart('instance').option('dataSource', filter.memoryUsageData);
                }
            });
            // Resize charts
            $(window).on('xenon.resize', function()
            {
                $("#range-chart").data("dxRangeSelector").render();
                $("#reqs-per-second-chart").data("dxChart").render();
                $("#cpu-usage-chart").data("dxChart").render();
                $("#memory-usage-chart").data("dxChart").render();
                $("#reqs-per-second").data("dxCircularGauge").render();
                $("#cpu-usage").data("dxCircularGauge").render();
                $("#memory-usage").data("dxCircularGauge").render();
            });
        });
    .panel.panel-default
        .panel-heading
            | Realtime result filtering by range
        .panel-body
            .row
                .col-sm-12
                    #range-chart
    .panel.panel-default
        .panel-heading
            | Requests per second
        .panel-body
            .row
                .col-sm-3
                    p.text-medium
                        | View the number of requests completed at the moment and for the selected range within the last day.
                    .super-large.text-secondary(data-count='this', data-from='0', data-to='44', data-duration='1.5') 0
                .col-sm-3
                    #reqs-per-second(style='height: 150px;')
                .col-sm-6
                    #reqs-per-second-chart(style='height: 150px;')
    .panel.panel-default
        .panel-heading
            | CPU usage in %
        .panel-body
            .row
                .col-sm-3
                    p.text-medium
                        | View how much CPU is being used at the moment and for the selected range within the last day.
                    .super-large.text-purple(data-count='this', data-from='0', data-to='16', data-duration='2') 0
                .col-sm-3
                    #cpu-usage(style='height: 150px;')
                .col-sm-6
                    #cpu-usage-chart(style='height: 150px;')
    .panel.panel-default
        .panel-heading
            | Memory Consumption, Mb
        .panel-body
            .row
                .col-sm-3
                    p.text-medium
                        | View how much memory is used at the moment and for the selected range within the last day.
                    .super-large.text-info(data-count='this', data-from='0', data-to='315', data-duration='3') 0
                .col-sm-3
                    #memory-usage(style='height: 150px;')
                .col-sm-6
                    #memory-usage-chart(style='height: 150px;')
